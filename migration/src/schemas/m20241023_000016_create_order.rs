use sea_orm_migration::prelude::*;
#[derive(DeriveMigrationName)]
// 订单表
pub struct Migration;
#[async_trait::async_trait]
impl MigrationTrait for Migration {
    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        // 创建订单表
        manager.create_table(
            Table::create()
                .table(Order::Table)
                .if_not_exists()
                .col(
                    ColumnDef::new(Order::Id)
                        .big_integer()
                        .not_null()
                        .unique_key()
                        .auto_increment()
                        .comment("自增id")
                )
                .col(
                    ColumnDef::new(Order::OrderSn)
                        .string()
                        .not_null()
                        .primary_key()
                        .comment("订单编号")
                )
                .col(ColumnDef::new(Order::UserId).string_len(36).not_null().comment("用户 ID"))
                .col(ColumnDef::new(Order::TotalAmount).decimal().not_null().comment("订单金额"))
                .col(ColumnDef::new(Order::PayAmount).decimal().not_null().comment("支付金额"))
                .col(ColumnDef::new(Order::FreightAmount).decimal().not_null().comment("运费金额"))
                .col(
                    ColumnDef::new(Order::AutoConfirmDay)
                        .integer()
                        .not_null()
                        .comment("自动确认时间（天）")
                )
                .col(ColumnDef::new(Order::DeliveryCompany).string().not_null().comment("物流公司"))
                .col(ColumnDef::new(Order::DeliverySn).string().not_null().comment("物流单号"))
                .col(ColumnDef::new(Order::DeliveryTime).timestamp().not_null().comment("发货时间"))
                .col(ColumnDef::new(Order::ReceiveName).string().not_null().comment("收货人姓名"))
                .col(ColumnDef::new(Order::ReceivePhone).string().not_null().comment("收货人电话"))
                .col(
                    ColumnDef::new(Order::ReceivePostCode).string().not_null().comment("收货人邮编")
                )
                .col(
                    ColumnDef::new(Order::ReceiveProvince).string().not_null().comment("收货人省份")
                )
                .col(ColumnDef::new(Order::ReceiveCity).string().not_null().comment("收货人城市"))
                .col(ColumnDef::new(Order::ReceiveRegion).string().not_null().comment("收货人区域"))
                .col(
                    ColumnDef::new(Order::ReceiveDetailAddress)
                        .string()
                        .not_null()
                        .comment("收货人详细地址")
                )
                .col(ColumnDef::new(Order::ReceiveTime).timestamp().not_null().comment("收货时间"))
                .col(ColumnDef::new(Order::Remark).string().not_null().comment("订单备注"))
                .col(
                    ColumnDef::new(Order::ConfirmStatus)
                        .integer()
                        .not_null()
                        .comment("确认收货状态；0：未确认，1：已确认")
                )
                .col(
                    ColumnDef::new(Order::OrderStatus)
                        .integer()
                        .not_null()
                        .comment("订单状态；0：待处理，1：已发货，2：已完成，3：已关闭")
                )
                .col(
                    ColumnDef::new(Order::PayType)
                        .integer()
                        .not_null()
                        .comment("支付方式；0：未支付，1：支付宝，2：微信")
                )
                .col(ColumnDef::new(Order::PayUrl).string().not_null().comment("支付信息"))
                .col(ColumnDef::new(Order::PayTime).timestamp().not_null().comment("支付时间"))
                .col(
                    ColumnDef::new(Order::IsDeleted)
                        .tiny_integer()
                        .not_null()
                        .comment("删除标志；1-已删除；0-未删除")
                )
                .col(ColumnDef::new(Order::CreateTime).timestamp().not_null().comment("创建时间"))
                .col(ColumnDef::new(Order::UpdateTime).timestamp().comment("更新时间"))
                .to_owned()
        ).await?;
        // 创建订单项表
        manager.create_table(
            Table::create()
                .table(OrderItem::Table)
                .if_not_exists()
                .col(
                    ColumnDef::new(OrderItem::Id)
                        .big_integer()
                        .not_null()
                        .unique_key()
                        .auto_increment()
                        .primary_key()
                        .comment("自增id")
                )
                .col(ColumnDef::new(OrderItem::OrderId).uuid().not_null().comment("订单 ID"))
                .col(ColumnDef::new(OrderItem::UserId).uuid().not_null().comment("用户 ID"))

                .col(ColumnDef::new(OrderItem::OrderSn).uuid().not_null().comment("订单编号"))
                .col(ColumnDef::new(OrderItem::ProductId).uuid().not_null().comment("商品SPU ID"))
                .col(
                    ColumnDef::new(OrderItem::ProductSkuId).uuid().not_null().comment("商品SKU ID")
                )
                .col(ColumnDef::new(OrderItem::ProductName).string().not_null().comment("商品名称"))
                .col(
                    ColumnDef::new(OrderItem::ProductBrand).string().not_null().comment("商品品牌")
                )
                .col(
                    ColumnDef::new(OrderItem::ProductPicture)
                        .string()
                        .not_null()
                        .comment("商品图片")
                )
                .col(
                    ColumnDef::new(OrderItem::ProductPrice).decimal().not_null().comment("商品价格")
                )
                .col(
                    ColumnDef::new(OrderItem::ProductQuantity)
                        .integer()
                        .not_null()
                        .comment("商品购买数量")
                )
                .col(
                    ColumnDef::new(OrderItem::ProductAttribute)
                        .string()
                        .not_null()
                        .comment("商品规格；JSON格式")
                )
                .col(
                    ColumnDef::new(OrderItem::IsDeleted)
                        .tiny_integer()
                        .not_null()
                        .comment("删除标志；1-已删除；0-未删除")
                )
                .col(
                    ColumnDef::new(OrderItem::CreateTime).timestamp().not_null().comment("创建时间")
                )
                .col(ColumnDef::new(OrderItem::UpdateTime).timestamp().comment("更新时间"))
                .to_owned()
        ).await?;
        Ok(())
    }

    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        // 删除订单表
        manager.drop_table(Table::drop().table(Order::Table).to_owned()).await?;
        //删除订单项表
        manager.drop_table(Table::drop().table(OrderItem::Table).to_owned()).await?;
        Ok(())
    }
}
// 订单表
#[derive(DeriveIden)]
enum Order {
    Table,
    Id,
    OrderSn,
    UserId,
    TotalAmount,
    PayAmount,
    FreightAmount,
    AutoConfirmDay,
    DeliveryCompany,
    DeliverySn,
    DeliveryTime,
    ReceiveName,
    ReceivePhone,
    ReceivePostCode,
    ReceiveProvince,
    ReceiveCity,
    ReceiveRegion,
    ReceiveDetailAddress,
    ReceiveTime,
    Remark,
    ConfirmStatus,
    OrderStatus,
    PayType,
    PayUrl,
    PayTime,
    IsDeleted,
    CreateTime,
    UpdateTime,
}
// 订单项表
#[derive(DeriveIden)]
enum OrderItem {
    Table,
    Id,
    UserId,
    OrderId,
    OrderSn,
    ProductId,
    ProductSkuId,
    ProductName,
    ProductBrand,
    ProductPicture,
    ProductPrice,
    ProductQuantity,
    ProductAttribute,
    IsDeleted,
    CreateTime,
    UpdateTime,
}
