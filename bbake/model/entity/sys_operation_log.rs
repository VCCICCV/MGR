//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "sys_operation_log")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub user_id: String,
    pub username: String,
    pub domain: String,
    pub module_name: String,
    pub description: String,
    pub request_id: String,
    pub method: String,
    pub url: String,
    pub ip: String,
    pub user_agent: Option<String>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub params: Option<Json>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub body: Option<Json>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub response: Option<Json>,
    pub start_time: DateTime,
    pub end_time: DateTime,
    pub duration: i32,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
